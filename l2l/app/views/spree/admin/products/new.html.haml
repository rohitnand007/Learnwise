= render partial: 'spree/admin/shared/error_messages', locals: { target: @product }
- content_for :page_title do
  = link_to Spree.t(:products), spree.admin_products_url
= form_for [:admin, @product], html: { multipart: true } do |f|
  %fieldset{"data-hook" => "new_product"}
    = f.field_container :name, class: ['form-group'] do
      = f.label :name, Spree.t(:name)
      %span.required *
      = f.text_field :name, class: 'form-control title', required: :required
      = f.error_message_on :name
    .row{"data-hook" => "new_product_attrs"}
      / - unless @product.has_variants?
      /   .col-xs-12.col-md-4{"data-hook" => "new_product_sku"}
      /     = f.field_container :sku, class: ['form-group'] do
      /       = f.label :sku, Spree.t(:sku)
      /       = f.text_field :sku, size: 16, class: 'form-control'
      /       = f.error_message_on :sku
      .col-xs-12.col-md-4{"data-hook" => "new_product_available_on"}
        = f.field_container :available_on, class: ['form-group'] do
          = f.label :available_on, Spree.t(:available_on)
          = f.error_message_on :available_on
          = f.text_field :available_on, class: 'datepicker form-control'
      .col-xs-12.col-md-4{"data-hook" => "new_product_shipping_category"}
        = f.field_container :shipping_category, class: ['form-group'] do
          = f.label :shipping_category_id, Spree.t(:shipping_categories)
          %span.required *
          = f.collection_select(:shipping_category_id, @shipping_categories, :id, :name, { include_blank: Spree.t('match_choices.none') }, { class: 'select2', required: :required })
          = f.error_message_on :shipping_category_id
      .col-xs-12.col-md-4{"data-hook" => "new_product_type"}
        = f.field_container :product_type, class: ['form-group'] do
          = f.label :product_type, Spree.t(:product_type)
          %span.required *
          = f.collection_select(:product_type, ['Book', 'Grade'], :to_s, :to_s, { }, { class: 'select2 product_type', required: :required })
          = f.error_message_on :product_type
      .col-xs-12.col-md-12.book_toc_selection{"data-hook" => "new_product_guid"}
        = f.field_container :product_guid, class: ['form-group'] do
          = f.label :product_guid, Spree.t(:select_toc)
          %span.required *
          = f.collection_select(:product_guid, @toc_items, :id, :display_name, { include_blank: Spree.t('match_choices.none') }, { class: 'select2'})
          = f.error_message_on :product_guid
      .col-xs-12.col-md-12.grade_toc_selection{"data-hook" => "new_product_tocs"}
        = f.field_container :product_toc_items, class: ['form-group'] do
          = f.label :product_toc_items, Spree.t(:select_toc)
          %span.required *
          = f.collection_select(:product_tocs, @toc_items, :id, :display_name, { include_blank: Spree.t('match_choices.none') }, { class: 'select2', multiple: true })
          = f.error_message_on :product_toc_items
    #product-from-prototype{"data-hook" => "product-from-prototype"}
      = render file: 'spree/admin/prototypes/show' if @prototype
    = render partial: 'spree/admin/shared/new_resource_links'
:javascript
  //
    (function($){
      var base_url = "#{spree.admin_prototypes_url}";
      var prototype_select = $('#product_prototype_id');
      prototype_select.change(function() {
        var id = prototype_select.val();
        if (id.length) {
          var url = new Uri(base_url);
          url.setPath(url.path() + '/' + id);
          $('#product-from-prototype').load(url.toString());
        } else {
          $('#product-from-prototype').empty();
        }
      })
      if (prototype_select.html() == "") {
        prototype_select.change();
      }
    })(jQuery);
  //
  $(document).ready(function(){
    $(".product_type").change(function(){
      var selected_product_type = $("#product_product_type").val();
      console.log(selected_product_type);
      if(selected_product_type == 'Book'){
        $(".book_toc_selection").css("display", "block");
        $(".grade_toc_selection").css("display", "none");
      }else{
        $(".book_toc_selection").css("display", "none");
        $(".grade_toc_selection").css("display", "block");
      }
    });
    $("#new_product").submit(function(){
      var selected_product_type = $("#product_product_type").val();
      if(selected_product_type == 'Book'){
        if($("#product_product_guid").val()==""){
          alert("Please select book to create product.");
          return false;
        }
        $("#product_product_tocs").val("");
      }else{
        var selected_tocs = false;
        
        if($("#product_product_tocs").length>0){
          selected_tocs = true;
        }
        if(selected_tocs==false){
          alert("Please select books to create product.");
          return false;
        }
        $("#product_product_guid").val("");
      }
      
      return true;
    });
  });

:css
  .grade_toc_selection{
    display: none;
  }
